{
  "uid" : "cb97e52aead526f4",
  "name" : "Change profile name",
  "fullName" : "tests.feature_profile_test.TestProfileFeature#test_change_profile_name",
  "historyId" : "42b4a115007c35c622675a0baedb491a",
  "time" : {
    "start" : 1708179909607,
    "stop" : 1708179909607,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/lib/chromium/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)",
  "statusTrace" : "request = <SubRequest 'driver' for <Function test_change_profile_name>>\n\n    @pytest.fixture(scope=\"function\", autouse=True)\n    def driver(request):\n        options = Options()\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_argument(\"--window-size=1920,1080\")\n>       driver = webdriver.Chrome(options=options)\n\nconftest.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:49: in __init__\n    super().__init__(\n../local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:54: in __init__\n    super().__init__(\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:206: in __init__\n    self.start_session(capabilities)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:291: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5fd9cfffe0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...sr/lib/chromium/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/lib/chromium/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1708179909607,
      "stop" : 1708179910348,
      "duration" : 741
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/lib/chromium/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/workspace/conftest.py\", line 13, in driver\n    driver = webdriver.Chrome(options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 49, in __init__\n    super().__init__(\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 54, in __init__\n    super().__init__(\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 206, in __init__\n    self.start_session(capabilities)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 291, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Profile Functionality"
  }, {
    "name" : "severity",
    "value" : "Critical"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "tag",
    "value" : "good"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "feature_profile_test"
  }, {
    "name" : "subSuite",
    "value" : "TestProfileFeature"
  }, {
    "name" : "host",
    "value" : "0fedd10c9a2e"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.feature_profile_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ {
      "uid" : "4d1a92e0418b02a1",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x557381241d93 <unknown>\n#1 0x557380f25337 <unknown>\n#2 0x557380f59bc0 <unknown>\n#3 0x557380f55765 <unknown>\n#4 0x557380f9fb7c <unknown>\n#5 0x557380f931e3 <unknown>\n#6 0x557380f63135 <unknown>\n#7 0x557380f6413e <unknown>\n#8 0x557381205e4b <unknown>\n#9 0x557381209dfa <unknown>\n#10 0x5573811f26d5 <unknown>\n#11 0x55738120aa6f <unknown>\n#12 0x5573811d669f <unknown>\n#13 0x55738122f098 <unknown>\n#14 0x55738122f262 <unknown>\n#15 0x557381240f34 <unknown>\n#16 0x7f2529c94ac3 <unknown>",
      "time" : {
        "start" : 1708179873749,
        "stop" : 1708179873749,
        "duration" : 0
      }
    }, {
      "uid" : "49ed6f58c918918a",
      "status" : "passed",
      "time" : {
        "start" : 1707769734895,
        "stop" : 1707769749014,
        "duration" : 14119
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "fad06d691c1eb11e",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1708177888889,
          "stop" : 1708177898930,
          "duration" : 10041
        }
      }, {
        "uid" : "4c7d72e6c1d04ab5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False",
        "time" : {
          "start" : 1707770594582,
          "stop" : 1707770605797,
          "duration" : 11215
        }
      }, {
        "uid" : "8bda90f367149691",
        "status" : "passed",
        "time" : {
          "start" : 1707770301759,
          "stop" : 1707770311912,
          "duration" : 10153
        }
      }, {
        "uid" : "358ae81c10330393",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1707756702712,
          "stop" : 1707756715258,
          "duration" : 12546
        }
      }, {
        "uid" : "5e169d903801df6b",
        "status" : "passed",
        "time" : {
          "start" : 1707756385022,
          "stop" : 1707756395624,
          "duration" : 10602
        }
      }, {
        "uid" : "bfd71b901b79971c",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1707755995591,
          "stop" : 1707756016721,
          "duration" : 21130
        }
      }, {
        "uid" : "e40143ffd9df2485",
        "status" : "passed",
        "time" : {
          "start" : 1707755459117,
          "stop" : 1707755469454,
          "duration" : 10337
        }
      }, {
        "uid" : "6b56e52358be0376",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-8c6e0396=\"\">...</button> is not clickable at point (1789, 709). Other element would receive the click: <form class=\"oxd-form\" novalidate=\"\" data-v-d5bfe35b=\"\" data-v-8c6e0396=\"\">...</form>\n  (Session info: headless chrome=112.0.5615.165)",
        "time" : {
          "start" : 1707755111616,
          "stop" : 1707755120255,
          "duration" : 8639
        }
      }, {
        "uid" : "d483d5106ae436b9",
        "status" : "passed",
        "time" : {
          "start" : 1707754968314,
          "stop" : 1707754978058,
          "duration" : 9744
        }
      }, {
        "uid" : "bc70b7d258d51bb6",
        "status" : "passed",
        "time" : {
          "start" : 1707754694446,
          "stop" : 1707754705296,
          "duration" : 10850
        }
      }, {
        "uid" : "9f56920b214816ed",
        "status" : "passed",
        "time" : {
          "start" : 1707754618214,
          "stop" : 1707754628833,
          "duration" : 10619
        }
      }, {
        "uid" : "944de75845cbb192",
        "status" : "passed",
        "time" : {
          "start" : 1707753298970,
          "stop" : 1707753309923,
          "duration" : 10953
        }
      }, {
        "uid" : "3213fc03fa949b5e",
        "status" : "passed",
        "time" : {
          "start" : 1707753201287,
          "stop" : 1707753212640,
          "duration" : 11353
        }
      }, {
        "uid" : "862ae8cd132275ea",
        "status" : "passed",
        "time" : {
          "start" : 1707752682933,
          "stop" : 1707752692627,
          "duration" : 9694
        }
      }, {
        "uid" : "c27c29a12f962aa5",
        "status" : "passed",
        "time" : {
          "start" : 1707751970776,
          "stop" : 1707751981760,
          "duration" : 10984
        }
      }, {
        "uid" : "91ffa4da2ae8495d",
        "status" : "passed",
        "time" : {
          "start" : 1707656586240,
          "stop" : 1707656597565,
          "duration" : 11325
        }
      }, {
        "uid" : "501177fdff516eba",
        "status" : "passed",
        "time" : {
          "start" : 1707656144358,
          "stop" : 1707656154295,
          "duration" : 9937
        }
      }, {
        "uid" : "9615c96399bb5df7",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-8c6e0396=\"\">...</button> is not clickable at point (1789, 709). Other element would receive the click: <form class=\"oxd-form\" novalidate=\"\" data-v-d5bfe35b=\"\" data-v-8c6e0396=\"\">...</form>\n  (Session info: headless chrome=112.0.5615.165)",
        "time" : {
          "start" : 1707652700521,
          "stop" : 1707652707877,
          "duration" : 7356
        }
      }, {
        "uid" : "b0c2bfd36d8cd8d7",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-8c6e0396=\"\">...</button> is not clickable at point (1789, 709). Other element would receive the click: <form class=\"oxd-form\" novalidate=\"\" data-v-d5bfe35b=\"\" data-v-8c6e0396=\"\">...</form>\n  (Session info: headless chrome=112.0.5615.165)",
        "time" : {
          "start" : 1707652088045,
          "stop" : 1707652097331,
          "duration" : 9286
        }
      }, {
        "uid" : "b584bbc091d7a97b",
        "status" : "passed",
        "time" : {
          "start" : 1707649702202,
          "stop" : 1707649709589,
          "duration" : 7387
        }
      } ]
    },
    "tags" : [ "smoke", "good" ]
  },
  "source" : "cb97e52aead526f4.json",
  "parameterValues" : [ ]
}